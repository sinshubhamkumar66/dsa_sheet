// first solution in c++

void sort012(int a[], int n)
{
    vector <int> v;
    for(int i=0; i<=n-1; i++){
        if(a[i]==0){
            v.push_back(a[i]);
        }
    }
    for(int i=0; i<=n-1; i++){
        if(a[i]==1){
            v.push_back(a[i]);
        }
    }
    for(int i=0; i<=n-1; i++){
        if(a[i]==2){
            v.push_back(a[i]);
        }
    }
    for(int i=0; i<=n-1; i++){
        a[i]=v.at(i);
    }
}
//second solution in c++

// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;



 // } Driver Code Ends
class Solution
{
    public:
    void sort012(int a[], int n)
    {
        // coode here 
        int low = 0, mid = 0, high = n-1;
    
        while(mid <= high)
        {
            switch(a[mid])
            {
                case 0:
                    swap(a[low], a[mid]);
                    low++;
                    mid++;
                    break;
                
                case 1:
                    mid++;
                    break;
                
                case 2:
                    swap(a[mid], a[high]);
                    high--;
                    break;
            }
        }
    }
    
};

// { Driver Code Starts.
int main() {

    int t;
    cin >> t;

    while(t--){
        int n;
        cin >>n;
        int a[n];
        for(int i=0;i<n;i++){
            cin >> a[i];
        }

        Solution ob;
        ob.sort012(a, n);

        for(int i=0;i<n;i++){
            cout << a[i]  << " ";
        }

        cout << endl;
        
        
    }
    return 0;
}

  // } Driver Code Ends
  
  // third solution in JAVA
  
  // { Driver Code Starts
//Initial template for Java

import java.io.*;
import java.util.*;


 // } Driver Code Ends
//User function template for Java

class Solution
{
    public static void sort012(int a[], int n)
    {
        // code here 
        int low=0, mid=0, high=a.length-1;
        while(i<=nt){
            if(a[i]==0){
                int temp = a[i];
                a[i] = a[nz];
                a[nz] = temp;
                i++;
                nz++;
            }else if(a[i]==2){
                int temp = a[i];
                a0r[i] = arr[nt];
                arr[nt] = temp;
                nt--;
            }else{
                i++;
            }
        }
    }
}

// { Driver Code Starts.

class GFG {
    
    public static void main (String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
        while(t-->0){
            int n = Integer.parseInt(br.readLine().trim());
            int arr[] = new int[n];
            String inputLine[] = br.readLine().trim().split(" ");
            for(int i=0; i<n; i++){
                arr[i] = Integer.parseInt(inputLine[i]);
            }
            Solution ob=new Solution();
            ob.sort012(arr, n);
            StringBuffer str = new StringBuffer();
            for(int i=0; i<n; i++){
                str.append(arr[i]+" ");
            }
            System.out.println(str);
        }
    }
}

  // } Driver Code Ends
